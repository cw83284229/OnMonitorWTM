@page "/Equipment/Alarm/Details/{id}"
@using OnMonitor.ViewModel.Equipment.AlarmVMs;
@inherits BasePage

<ValidateForm @ref="vform" Model="@Model" >
    <Row ItemsPerRow="ItemsPerRow.Two" RowType="RowType.Normal">

            <Display @bind-Value="@Model.Entity.AlarmHostID" Lookup="@AllAlarmHosts"  ShowLabel="true"/>
            <Display @bind-Value="@Model.Entity.Alarm_ID"   ShowLabel="true"/>
            <Display @bind-Value="@Model.Entity.Channel_ID"   ShowLabel="true"/>
            <Display @bind-Value="@Model.Entity.Build"   ShowLabel="true"/>
            <Display @bind-Value="@Model.Entity.floor"   ShowLabel="true"/>
            <Display @bind-Value="@Model.Entity.Location"   ShowLabel="true"/>
            <Display @bind-Value="@Model.Entity.GeteType"   ShowLabel="true"/>
            <Display @bind-Value="@Model.Entity.SensorType"   ShowLabel="true"/>
            <Display @bind-Value="@Model.Entity.department"   ShowLabel="true"/>
            <Display @bind-Value="@Model.Entity.Cost_code"   ShowLabel="true"/>
            <Display @bind-Value="@Model.Entity.install_time"   ShowLabel="true"/>
            <Display @bind-Value="@Model.Entity.category"   ShowLabel="true"/>
            <Display @bind-Value="@Model.Entity.InsideCamera_ID"   ShowLabel="true"/>
            <Display @bind-Value="@Model.Entity.OutsideCamera_ID"   ShowLabel="true"/>
            <Switch @bind-Value="@Model.Entity.IsAlertor"  IsDisabled="true" ShowLabel="true"/>
            <Switch @bind-Value="@Model.Entity.IsOpenOrClosed"  IsDisabled="true" ShowLabel="true"/>
            <Display @bind-Value="@Model.Entity.Remark"   ShowLabel="true"/>
    </Row>
    <div class="modal-footer table-modal-footer">
        <Button Color="Color.Primary" Icon="fa fa-save" Text="@WtmBlazor.Localizer["Sys.Close"]" OnClick="OnClose" />
    </div>
</ValidateForm>

@code {

    private AlarmVM Model = null;
    private ValidateForm vform { get; set; }
    [Parameter]
    public string id { get; set; }

    private List<SelectedItem> AllAlarmHosts = new List<SelectedItem>();


    protected override async Task OnInitializedAsync()
    {

        AllAlarmHosts = await WtmBlazor.Api.CallItemsApi("/api/Alarm/GetAlarmHosts", placeholder: WtmBlazor.Localizer["Sys.All"]);

        var rv = await WtmBlazor.Api.CallAPI<AlarmVM>($"/api/Alarm/{id}");
        Model = rv.Data;
    }

    public void OnClose()
    {
        CloseDialog();
    }

}
